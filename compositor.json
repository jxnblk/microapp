{
  "name": "jxnblk/microapp",
  "version": "0.1.4",
  "libraries": {
    "xv": "^1.1.9"
  },
  "title": "",
  "branch": "",
  "style": {
    "name": "Williamsburg",
    "componentSet": {
      "nav": "nav/BasicNav",
      "header": "header/HighlightBannerHeader",
      "article": "article/ReaderArticle",
      "footer": "footer/BasicFooter"
    },
    "fontFamily": "Montserrat, sans-serif",
    "heading": {
      "fontWeight": 600,
      "letterSpacing": "0.1em"
    },
    "colors": {
      "text": "#346",
      "background": "#fff",
      "primary": "#0099e0",
      "secondary": "#ab61ff",
      "highlight": "#f7b",
      "muted": "#fffab3",
      "border": "#ccd"
    }
  },
  "content": [
    {
      "component": "nav",
      "links": [
        {
          "href": "https://github.com/jxnblk/microapp",
          "text": "GitHub"
        },
        {
          "href": "https://npmjs.com/package/microapp",
          "text": "npm"
        }
      ]
    },
    {
      "component": "header",
      "heading": "microapp",
      "subhead": "",
      "children": [
        {
          "component": "ui/TweetButton",
          "text": "microapp: ",
          "url": null
        },
        {
          "component": "ui/GithubButton",
          "user": "jxnblk",
          "repo": "microapp"
        }
      ],
      "text": "v1.0.0"
    },
    {
      "component": "article",
      "html": "\n<p>Minimal functional application creator.\nA demonstration of basic functional UI principles.</p>\n<pre>npm i microapp</pre><h2 id=\"usage-\">Usage:</h2>\n<pre><span class=\"hljs-keyword\">import</span> createApp, { h } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&apos;microapp&apos;</span>\n\n<span class=\"hljs-comment\">// Redux-like reducer for application state</span>\n<span class=\"hljs-keyword\">const</span> reducer = (state = {\n  count: <span class=\"hljs-number\">0</span>\n}, action) =&gt; {\n  <span class=\"hljs-keyword\">switch</span> (action.type) {\n    <span class=\"hljs-keyword\">case</span>: <span class=\"hljs-string\">&apos;dec&apos;</span>:\n      <span class=\"hljs-keyword\">const</span> count = state.count - <span class=\"hljs-number\">1</span>\n      <span class=\"hljs-keyword\">return</span> { ...state, count }\n    <span class=\"hljs-keyword\">case</span>: <span class=\"hljs-string\">&apos;inc&apos;</span>:\n      <span class=\"hljs-keyword\">const</span> count = state.count + <span class=\"hljs-number\">1</span>\n      <span class=\"hljs-keyword\">return</span> { ...state, count }\n    <span class=\"hljs-keyword\">default</span>:\n      <span class=\"hljs-keyword\">return</span> state\n  }\n}\n\n<span class=\"hljs-comment\">// Functional UI component</span>\n<span class=\"hljs-keyword\">const</span> App = ({ state, dispatch }) =&gt; {\n  <span class=\"hljs-keyword\">return</span> h<span class=\"hljs-string\">`\n    &lt;div&gt;\n      &lt;h1&gt;Count: <span class=\"hljs-subst\">${state.count}</span>&lt;/h1&gt;\n      &lt;button\n        onclick=<span class=\"hljs-subst\">${e =&gt; dispatch({ type: &apos;dec&apos; }</span>)}&gt;\n        - Decrement\n      &lt;/button&gt;\n      &lt;button\n        onclick=<span class=\"hljs-subst\">${e =&gt; dispatch({ type: &apos;inc&apos; }</span>)}&gt;\n        + Increment\n      &lt;/button&gt;\n    &lt;/div&gt;\n  `</span>\n}\n\n<span class=\"hljs-keyword\">const</span> app = createApp(reducer, App)\n\napp.mount(<span class=\"hljs-built_in\">document</span>.body)</pre><h2 id=\"features\">Features</h2>\n<ul>\n<li>Redux-like store with a single reducer</li>\n<li>ES2015 template literal functions based on bel</li>\n<li>DOM update using morphdom and yo.update</li>\n<li>cxs className helper for functional styles</li>\n</ul>\n"
    },
    {
      "component": "footer",
      "links": [
        {
          "href": "https://github.com/jxnblk/microapp",
          "text": "GitHub"
        },
        {
          "href": "https://github.com/jxnblk",
          "text": "jxnblk"
        }
      ]
    }
  ]
}